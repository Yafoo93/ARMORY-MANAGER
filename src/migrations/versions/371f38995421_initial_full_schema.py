"""initial full schema

Revision ID: 371f38995421
Revises:
Create Date: 2025-10-28 16:29:52.789553

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "371f38995421"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "duty_points",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("location", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("location"),
    )
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("service_number", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("telephone", sa.String(), nullable=False),
        sa.Column("role", sa.String(), nullable=False),
        sa.Column("unit", sa.String(), nullable=True),
        sa.Column("hashed_password", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("service_number"),
    )
    op.create_table(
        "weapons",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("serial_number", sa.String(), nullable=False),
        sa.Column("type", sa.String(), nullable=False),
        sa.Column("condition", sa.String(), nullable=False),
        sa.Column("location", sa.String(), nullable=True),
        sa.Column("status", sa.String(), nullable=False),
        sa.Column(
            "last_service",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=True,
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("serial_number"),
    )
    op.create_table(
        "ammunitions",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("weapon_id", sa.Integer(), nullable=False),
        sa.Column("platform", sa.String(), nullable=False),
        sa.Column("caliber", sa.String(), nullable=False),
        sa.Column("count", sa.Integer(), nullable=False),
        sa.Column("reorder_level", sa.Integer(), nullable=False),
        sa.Column("bin_location", sa.String(), nullable=True),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["weapon_id"],
            ["weapons.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("platform", "caliber", name="uq_ammo_platform_caliber"),
    )
    op.create_index("ix_ammo_caliber", "ammunitions", ["caliber"], unique=False)
    op.create_table(
        "fingerprints",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("template", sa.LargeBinary(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id"),
    )
    op.create_table(
        "records",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("officer_id", sa.Integer(), nullable=False),
        sa.Column("weapon_id", sa.Integer(), nullable=False),
        sa.Column("duty_point_id", sa.Integer(), nullable=False),
        sa.Column("ammo_issued", sa.Integer(), nullable=False),
        sa.Column("time_booked", sa.DateTime(), nullable=False),
        sa.Column("time_returned", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["duty_point_id"],
            ["duty_points.id"],
        ),
        sa.ForeignKeyConstraint(
            ["officer_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["weapon_id"],
            ["weapons.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "shifts",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("armorer_id", sa.Integer(), nullable=False),
        sa.Column(
            "started_at",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("ended_at", sa.DateTime(), nullable=True),
        sa.Column("active", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(
            ["armorer_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "bookings",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("officer_id", sa.Integer(), nullable=False),
        sa.Column("armorer_id", sa.Integer(), nullable=False),
        sa.Column("weapon_id", sa.Integer(), nullable=False),
        sa.Column("duty_point_id", sa.Integer(), nullable=False),
        sa.Column("ammunition_id", sa.Integer(), nullable=True),
        sa.Column("ammunition_count", sa.Integer(), nullable=True),
        sa.Column("ammunition_returned", sa.Integer(), nullable=True),
        sa.Column("remarks", sa.String(), nullable=True),
        sa.Column(
            "status",
            sa.Enum(
                "REQUESTED",
                "APPROVED",
                "ACTIVE",
                "RETURNED",
                "OVERDUE",
                "DAMAGED",
                "CANCELLED",
                "REJECTED",
                name="bookingstatus",
            ),
            nullable=False,
        ),
        sa.Column("issued_at", sa.DateTime(), nullable=False),
        sa.Column("expected_return_at", sa.DateTime(), nullable=True),
        sa.Column("returned_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["ammunition_id"],
            ["ammunitions.id"],
        ),
        sa.ForeignKeyConstraint(
            ["armorer_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["duty_point_id"],
            ["duty_points.id"],
        ),
        sa.ForeignKeyConstraint(
            ["officer_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["weapon_id"],
            ["weapons.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_bookings_id"), "bookings", ["id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_bookings_id"), table_name="bookings")
    op.drop_table("bookings")
    op.drop_table("shifts")
    op.drop_table("records")
    op.drop_table("fingerprints")
    op.drop_index("ix_ammo_caliber", table_name="ammunitions")
    op.drop_table("ammunitions")
    op.drop_table("weapons")
    op.drop_table("users")
    op.drop_table("duty_points")
    # ### end Alembic commands ###
